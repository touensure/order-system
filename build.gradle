plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.order.manager'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
	mavenCentral()
}

ext {
	guavaVersion = "26.0-jre"
	eclipselinkVersion = "2.7.4"
	postgresqlVersion = "42.2.5.jre6"
	jacocoVersion = "0.8.2"
	apacheCommonsLang3Version = "3.7"
	queryDslVersion = "4.2.1"
	jacksonVersion = "2.10.2"
	//see : update caasStarter and logging
	caasStarter = "3.38.9"
	loggingVersion = "3.0.8"
	xsEnvVersion = "1.6.0"
	ical4jVersion = "3.0.2"

	spockSpringVersion = "1.2-groovy-2.5"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.projectlombok:lombok'

	implementation 'org.postgresql:postgresql'//添加数据库
	compile("org.flywaydb:flyway-core")//add flyway

//	QueryDSL-JPA
	compile("com.querydsl:querydsl-core:${queryDslVersion}")
	compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
	compileOnly("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
			"org.eclipse.persistence:org.eclipse.persistence.jpa:${eclipselinkVersion}",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok:1.18.2"
	)
	compile("org.projectlombok:lombok:1.18.2")

//	swagger
	compile("io.springfox:springfox-swagger2:2.9.2")
	compile("io.springfox:springfox-swagger-ui:2.9.2")//within this line and next, choose one of them
//	compile("com.github.xiaoymin:swagger-bootstrap-ui:1.9.0")


//	swagger security
	compile("org.apache.shiro:shiro-core:1.4.2")
	compile("org.apache.shiro:shiro-ehcache:1.4.0")
	compile("org.apache.shiro:shiro-spring:1.4.0")


	compile("org.springframework.boot:spring-boot-starter-amqp")
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

//JWT token authentication
	implementation("com.auth0:java-jwt:3.4.0")
	implementation("io.jsonwebtoken:jjwt:0.9.1")
//mapper
	compile("ma.glasnost.orika:orika-core:1.5.2")

	compile("org.apache.commons:commons-email:1.5")
}

test {
	useJUnitPlatform()
}
